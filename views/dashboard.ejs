<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard ONT</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        /* Tambahkan style untuk toast */
        .alert {
            transition: opacity 0.3s ease-in-out;
        }

        /* Style untuk button refresh */
        .btn-refresh {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            color: #6c757d;
            transition: all 0.2s ease;
        }

        .btn-refresh:hover {
            background-color: #e9ecef;
            color: #495057;
        }

        .btn-refresh:disabled {
            opacity: 0.65;
            cursor: not-allowed;
        }

        /* Animasi spin untuk icon */
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .fa-spin {
            animation: spin 1s linear infinite;
        }
        
        .navbar {
    background: linear-gradient(90deg, #4a90e2 0%, #6a11cb 100%);
    padding: 1rem 0;
    box-shadow: 0 2px 10px rgba(0,0,0,0.12);
    border-radius: 0 0 24px 24px;
}
        .navbar-brand {
            font-weight: 600;
            font-size: 1.25rem;
        }
        .card {
    border: none;
    border-radius: 18px;
    box-shadow: 0 4px 32px 0 rgba(44, 62, 80, 0.12);
    background: linear-gradient(120deg, #4a90e2 0%, #5f2c82 100%);
    color: #fff;
    transition: transform 0.2s, box-shadow 0.2s;
}
.card:hover {
    transform: translateY(-6px) scale(1.02);
    box-shadow: 0 8px 40px 0 rgba(44, 62, 80, 0.18);
}
        .card-header {
            background: transparent;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 20px;
        }
        .card-header h5 {
            color: #333;
            font-weight: 600;
            margin: 0;
        }
        .status-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            font-size: 2rem;
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.3),
                0 0 30px rgba(107, 115, 255, 0.3),
                inset 0 0 0 1px rgba(255, 255, 255, 0.5);
        }
        .btn {
            border-radius: 50px;
            padding: 10px 20px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 
                0 8px 20px rgba(0, 0, 0, 0.15),
                0 0 15px rgba(107, 115, 255, 0.15),
                inset 0 0 0 1px rgba(255, 255, 255, 0.2);
        }
        .btn:hover {
            transform: translateY(-5px);
            box-shadow: 
                0 15px 30px rgba(0, 0, 0, 0.2),
                0 0 20px rgba(107, 115, 255, 0.2),
                inset 0 0 0 1px rgba(255, 255, 255, 0.3);
        }
        .btn-primary {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            border: none;
        }
        .btn-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5253 100%);
            border: none;
        }
        .info-group {
            background: rgba(255, 255, 255, 0.5);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            box-shadow: 
                0 5px 15px rgba(0, 0, 0, 0.05),
                0 0 10px rgba(107, 115, 255, 0.05),
                inset 0 0 0 1px rgba(255, 255, 255, 0.2);
        }
        .info-group:hover {
            background: rgba(255, 255, 255, 0.8);
            transform: translateY(-5px);
            box-shadow: 
                0 15px 30px rgba(0, 0, 0, 0.1),
                0 0 20px rgba(107, 115, 255, 0.1),
                inset 0 0 0 1px rgba(255, 255, 255, 0.3);
        }
        .table {
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.2),
                0 0 25px rgba(107, 115, 255, 0.15),
                inset 0 0 0 1px rgba(255, 255, 255, 0.2);
        }
        .table thead th {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            font-weight: 500;
            border: none;
        }
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        .btn-primary:hover {
            background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        }
        .alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            min-width: 300px;
            display: none;
        }
        /* Style untuk alert/toast */
        .custom-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            border-radius: 0.25rem;
            padding: 1rem;
            display: flex;
            align-items: center;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }
        .custom-alert.show {
            opacity: 1;
        }
        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border-left: 4px solid #28a745;
        }
        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border-left: 4px solid #dc3545;
        }

        /* Dark Mode Styles */
        .dark-mode {
            color-scheme: dark;
        }
        
        .dark-mode body {
            background: #121212 url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="400" height="400" viewBox="0 0 800 800"%3E%3Cg fill="none" stroke="%23333" stroke-width="1"%3E%3Cpath d="M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63"%3E%3C/path%3E%3Cpath d="M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764"%3E%3C/path%3E%3Cpath d="M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880"%3E%3C/path%3E%3Cpath d="M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382"%3E%3C/path%3E%3Cpath d="M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269"%3E%3C/path%3E%3C/g%3E%3Cg fill="%23444"%3E%3Ccircle cx="769" cy="229" r="5"/%3E%3Ccircle cx="539" cy="269" r="5"/%3E%3Ccircle cx="603" cy="493" r="5"/%3E%3Ccircle cx="731" cy="737" r="5"/%3E%3Ccircle cx="520" cy="660" r="5"/%3E%3Ccircle cx="309" cy="538" r="5"/%3E%3Ccircle cx="295" cy="764" r="5"/%3E%3Ccircle cx="40" cy="599" r="5"/%3E%3Ccircle cx="102" cy="382" r="5"/%3E%3Ccircle cx="127" cy="80" r="5"/%3E%3Ccircle cx="370" cy="105" r="5"/%3E%3Ccircle cx="578" cy="42" r="5"/%3E%3Ccircle cx="237" cy="261" r="5"/%3E%3Ccircle cx="390" cy="382" r="5"/%3E%3C/g%3E%3C/svg%3E');
            color: #e0e0e0;
            transition: background-color 0.5s ease, color 0.5s ease;
        }
        
        .dark-mode .navbar {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%);
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.3);
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            transition: all 0.5s ease;
        }
        
        .dark-mode .card {
            background-color: rgba(20, 20, 30, 0.8);
            box-shadow: 
                0 20px 50px rgba(0, 0, 0, 0.4),
                0 0 30px rgba(107, 115, 255, 0.1),
                inset 0 0 0 1px rgba(255, 255, 255, 0.05);
        }
        
        .dark-mode .card:hover {
            box-shadow: 
                0 30px 70px rgba(0, 0, 0, 0.5),
                0 0 40px rgba(107, 115, 255, 0.2),
                inset 0 0 0 1px rgba(255, 255, 255, 0.1);
        }
        
        .dark-mode .card-header {
            background-color: rgba(30, 30, 40, 0.5);
            border-color: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
        }
        
        .dark-mode .table {
            color: #e0e0e0;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .dark-mode .table-light th {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%);
            color: #ffffff;
            border-color: rgba(255, 255, 255, 0.05);
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
        }
        
        .dark-mode .table td {
            border-color: rgba(255, 255, 255, 0.05);
            transition: background-color 0.2s ease;
        }
        
        .dark-mode .table-hover tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }
        
        .dark-mode .form-control {
            background-color: rgba(30, 30, 40, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: #e0e0e0;
            backdrop-filter: blur(5px);
            transition: all 0.3s ease;
        }
        
        .dark-mode .form-control:focus {
            background-color: rgba(40, 40, 50, 0.8);
            border-color: rgba(123, 104, 238, 0.5);
            box-shadow: 0 0 0 0.25rem rgba(123, 104, 238, 0.25);
            color: #ffffff;
        }
        
        .dark-mode .info-group label,
        .dark-mode .stat-info label {
            color: #8da2fb;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }
        
        .dark-mode .info-group .value,
        .dark-mode .stat-info .value {
            color: #ffffff;
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.2);
        }
        
        .dark-mode .text-muted {
            color: #a0aec0 !important;
        }
        
        .dark-mode .btn-outline-secondary {
            color: #a0aec0;
            border-color: rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        
        .dark-mode .btn-outline-secondary:hover {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%);
            color: #ffffff;
            border-color: transparent;
        }
        
        .dark-mode .btn-refresh {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%);
            box-shadow: 0 4px 12px rgba(30, 30, 100, 0.3);
        }
        
        .dark-mode .btn-refresh:hover {
            background: linear-gradient(135deg, #4e4376 0%, #2b5876 100%);
            box-shadow: 0 6px 15px rgba(30, 30, 100, 0.4);
        }
        
        .dark-mode .btn-primary {
            background: linear-gradient(90deg, #4a90e2 0%, #6a11cb 100%);
            border: none;
            color: #fff;
            box-shadow: 0 2px 8px rgba(76,110,245,0.18);
            transition: background 0.2s, box-shadow 0.2s;
        }
        .dark-mode .btn-primary:hover, .dark-mode .btn-primary:focus {
            background: linear-gradient(90deg, #6a11cb 0%, #4a90e2 100%);
            box-shadow: 0 4px 16px rgba(76,110,245,0.28);
            color: #fff;
        }
        
        .dark-mode .btn-danger {
            background: linear-gradient(135deg, #cb2d3e 0%, #ef473a 100%);
            border: none;
            box-shadow: 0 4px 12px rgba(200, 40, 40, 0.3);
            transition: all 0.3s ease;
        }
        
        .dark-mode .btn-danger:hover {
            background: linear-gradient(135deg, #ef473a 0%, #cb2d3e 100%);
            box-shadow: 0 6px 15px rgba(200, 40, 40, 0.4);
            transform: translateY(-2px);
        }
        
        .dark-mode .bg-light {
            background-color: #1a1a2e !important;
        }
        
        .dark-mode .stat-item {
            background: rgba(255, 255, 255, 0.8);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            border: 1px solid rgba(107, 115, 255, 0.1);
            box-shadow: 
                0 10px 30px rgba(0, 0, 0, 0.1),
                0 0 20px rgba(107, 115, 255, 0.1),
                inset 0 0 0 1px rgba(255, 255, 255, 0.2);
        }
        
        .dark-mode .stat-item:hover {
            transform: translateY(-10px);
            box-shadow: 
                0 20px 40px rgba(0, 0, 0, 0.2),
                0 0 30px rgba(107, 115, 255, 0.2),
                inset 0 0 0 1px rgba(255, 255, 255, 0.3);
        }
        
        .dark-mode .stat-icon {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%);
            box-shadow: 0 4px 15px rgba(30, 30, 100, 0.4);
        }
        
        .dark-mode .alert-info {
            background-color: rgba(30, 58, 138, 0.3);
            border-left: 4px solid #3b82f6;
            color: #93c5fd;
            backdrop-filter: blur(5px);
        }
        
        .dark-mode .alert-danger {
            background-color: rgba(153, 27, 27, 0.3);
            border-left: 4px solid #ef4444;
            color: #fca5a5;
            backdrop-filter: blur(5px);
        }
        
        .dark-mode .modal-content {
            background-color: rgba(20, 20, 30, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        }
        
        .dark-mode .badge.bg-primary {
            background: linear-gradient(135deg, #2b5876 0%, #4e4376 100%) !important;
        }
        
        .dark-mode .badge.bg-info {
            background: linear-gradient(135deg, #0093E9 0%, #80D0C7 100%) !important;
        }
        
        .dark-mode .badge.bg-success {
            background: linear-gradient(135deg, #2ecc71 0%, #1abc9c 100%) !important;
        }
        
        .dark-mode .badge.bg-secondary {
            background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%) !important;
        }
        
        .dark-mode .spinner-border.text-primary {
            color: #8da2fb !important;
        }
        
        /* Theme Toggle Button Styles - Enhanced */
        .theme-toggle {
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 44px;
            height: 44px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.1);
            margin-right: 15px;
        }
        
        .theme-toggle:hover {
            transform: rotate(15deg) scale(1.1);
            background: rgba(255, 255, 255, 0.3);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }
        
        .dark-mode .theme-toggle {
            background: rgba(60, 60, 70, 0.5);
            border: 2px solid rgba(123, 104, 238, 0.3);
            box-shadow: 0 3px 15px rgba(123, 104, 238, 0.2);
        }
        
        .dark-mode .theme-toggle:hover {
            background: rgba(80, 80, 90, 0.7);
            box-shadow: 0 5px 20px rgba(123, 104, 238, 0.4);
        }
        
        .theme-toggle i {
            font-size: 1.25rem;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        
        .theme-toggle:hover i {
            transform: rotate(360deg);
        }
        
        /* Transisi Halus untuk Tema */
        html {
            transition: all 0.5s ease;
        }
        
        body, .card, .navbar, .form-control, .btn, .alert, .badge, .table {
            transition: all 0.5s ease;
        }
        
        /* Gaya Kustom Tambahan untuk Mode Light */
        body {
            transition: background-color 0.5s ease, color 0.5s ease;
        }
        
        .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        /* Glow Effect untuk Status Icons */
        .dark-mode .status-icon {
            box-shadow: 0 0 20px rgba(123, 104, 238, 0.5);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .card {
                margin-bottom: 20px;
            }

            .btn {
                width: 100%;
                margin-bottom: 10px;
            }
        }

        .navbar-logo {
            height: 40px;
            width: auto;
            transition: transform 0.3s ease;
        }

        .navbar-logo:hover {
            transform: scale(1.05);
        }

        /* Dark mode adjustment untuk logo */
        .dark-mode .navbar-logo {
            filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
        }
    </style>
</head>
<body class="bg-light">
    <nav class="navbar navbar-dark">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center">
                <img src="/icons/logo.png?v=<%= Date.now() %>" alt="ALIJAYA-NET" class="navbar-logo me-2">
                ONT Monitoring
            </a>
            <div class="ms-auto d-flex align-items-center">
                <div id="themeToggle" class="theme-toggle me-3" title="Toggle Dark/Light Mode">
                    <i class="fas fa-moon"></i>
                </div>
                <a href="/logout" class="btn btn-outline-light btn-sm">
                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container my-4">
        <div class="row">
            <!-- Status Card -->
            <div class="col-md-4 mb-4">
                <div class="card h-100 border-0 shadow-sm">
                    <div class="card-body text-center">
                        <div class="status-icon mb-3" <% if(deviceData && deviceData.statusColor) { %>style="background-color: <%= deviceData.statusColor %>"<% } else { %>style="background-color: #4a90e2"<% } %>>
                            <i class="fas fa-signal"></i>
                        </div>
                        <h5 class="card-title mb-1"><%= deviceData.statusLabel %></h5>
                        <p class="text-muted small mb-0">Last Inform: <%= deviceData.lastInform %></p>
                        <div class="mt-3">
                            <button id="refreshButton" class="btn btn-refresh me-2" onclick="refreshDevice()">
                                <i class="fas fa-sync-alt me-2"></i>Refresh
                            </button>
                            <button id="rebootButton" class="btn btn-danger" onclick="rebootDevice()">
                                <i class="fas fa-power-off me-2"></i>Reboot
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Device Info Card -->
            <div class="col-md-8 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0">
                        <h5 class="mb-0"><i class="fas fa-server me-2"></i>Device Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>Model</label>
                                    <div class="value"><%= deviceData.model %></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>Serial Number</label>
                                    <div class="value"><%= deviceData.serialNumber %></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>PPPoE Username</label>
                                    <div class="value"><%= deviceData.pppUsername %></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>MAC Address</label>
                                    <div class="value"><%= deviceData.pppMac %></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>Nomor Pelanggan</label>
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="flex-grow-1">
                                            <div class="input-group">
                                                <input type="text" 
                                                       class="form-control" 
                                                       id="customerNumber"
                                                       value="<%= deviceData._tags ? deviceData._tags.find(tag => /^\d+$/.test(tag)) || '' : '' %>"
                                                       placeholder="Masukkan nomor pelanggan"
                                                       pattern="[0-9]+"
                                                       required>
                                                <button type="button" class="btn btn-primary" onclick="updateCustomerNumber()">
                                                    <i class="fas fa-save me-1"></i>Simpan
                                                </button>
                                            </div>
                                            <small class="text-muted">Nomor ini digunakan untuk login di dashboard</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-group">
                                    <label>Nama Pelanggan</label>
                                    <div class="value">
                                        <% 
                                        let customerName = 'Belum diatur';
                                        if (deviceData._tags && Array.isArray(deviceData._tags)) {
                                            const nameTag = deviceData._tags.find(tag => tag.startsWith('customerName:'));
                                            if (nameTag) {
                                                customerName = nameTag.split('customerName:')[1];
                                            }
                                        }
                                        %>
                                        <%= customerName %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Network Stats -->
            <div class="col-md-6 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0">
                        <h5 class="mb-0"><i class="fas fa-chart-line me-2"></i>Network Statistics</h5>
                    </div>
                    <div class="card-body">
                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-tachometer-alt"></i>
                            </div>
                            <div class="stat-info">
                                <label>RX Power</label>
                                <div class="value"><%= deviceData.rxPower %> dBm</div>
                            </div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-clock"></i>
                            </div>
                            <div class="stat-info">
                                <label>Uptime</label>
                                <div class="value"><%= deviceData.uptime %></div>
                            </div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="stat-info">
                                <label>Connected Users</label>
                                <div class="value">
                                    <span class="badge bg-primary">2.4G: <%= deviceData.userConnected2G || '0' %></span>
                                    <span class="badge bg-info">5G: <%= deviceData.userConnected5G || '0' %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- WiFi Settings -->
            <div class="col-md-6 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0">
                        <h5 class="mb-0"><i class="fas fa-wifi me-2"></i>WiFi Settings</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <h6 class="text-primary"><i class="fas fa-wifi me-2"></i>WiFi 2.4G</h6>
                            <!-- Form Update SSID 2.4G -->
                            <div class="mt-3">
                                <form class="update-ssid-2g-form" data-device-id="<%= deviceData._id %>">
                                    <label class="form-label">SSID 2.4G</label>
                                    <div class="input-group">
                                        <input type="text" name="ssid2G" class="form-control" 
                                               placeholder="SSID 2.4G" 
                                               value="<%= deviceData.ssid || deviceData.ssid2G || 'N/A' %>" 
                                               required>
                                        <button type="submit" class="btn btn-primary" title="Update SSID 2.4G">
                                            <i class="fas fa-save"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>

                            <!-- Form Update Password 2.4G -->
                            <div class="mt-3">
                                <form class="update-password-2g-form" data-device-id="<%= deviceData._id %>">
                                    <label class="form-label">Password 2.4G</label>
                                    <div class="input-group">
                                        <input type="password" name="password2G" class="form-control wifi-password-2g" 
                                               placeholder="New Password 2.4G" minlength="8" required>
                                        <button type="button" class="btn btn-outline-secondary toggle-password-2g" title="Show/Hide Password">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button type="submit" class="btn btn-primary" title="Update Password 2.4G">
                                            <i class="fas fa-key"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <hr class="my-3">

                        <div class="mb-3">
                            <h6 class="text-primary"><i class="fas fa-wifi me-2"></i>WiFi 5G</h6>
                            <!-- Form Update SSID 5G -->
                            <div class="mt-3">
                                <form class="update-ssid-5g-form" data-device-id="<%= deviceData._id %>">
                                    <label class="form-label">SSID 5G</label>
                                    <div class="input-group">
                                        <input type="text" name="ssid5G" class="form-control" 
                                               placeholder="SSID 5G" 
                                               value="<%= deviceData.ssid5G || (deviceData.ssid ? deviceData.ssid + '-5G' : 'N/A') %>" 
                                               required>
                                        <button type="submit" class="btn btn-primary" title="Update SSID 5G">
                                            <i class="fas fa-save"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>

                            <!-- Form Update Password 5G -->
                            <div class="mt-3">
                                <form class="update-password-5g-form" data-device-id="<%= deviceData._id %>">
                                    <label class="form-label">Password 5G</label>
                                    <div class="input-group">
                                        <input type="password" name="password5G" class="form-control wifi-password-5g" 
                                               placeholder="New Password 5G" minlength="8" required>
                                        <button type="button" class="btn btn-outline-secondary toggle-password-5g" title="Show/Hide Password">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button type="submit" class="btn btn-primary" title="Update Password 5G">
                                            <i class="fas fa-key"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Laporan Gangguan -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0">
                    <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>LAPORAN GANGGUAN</h5>
                </div>
                <div class="card-body">
                    <form id="formLaporanGangguan">
                        <div class="mb-3">
                            <label for="jenisGangguan" class="form-label">Jenis Gangguan</label>
                            <select class="form-select" id="jenisGangguan" name="jenisGangguan" required>
                                <option value="">-- Pilih Gangguan --</option>
                                <option value="ONU mati">ONU mati</option>
                                <option value="Kabel Jaringan Putus">Kabel Jaringan Putus</option>
                                <option value="Tidak ada Internet">Tidak ada Internet</option>
                                <option value="Lainnya">Lainnya</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="keteranganGangguan" class="form-label">Keterangan (Opsional)</label>
                            <textarea class="form-control" id="keteranganGangguan" name="keteranganGangguan" rows="2" placeholder="Tuliskan detail gangguan jika ada..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-danger"><i class="fas fa-paper-plane me-1"></i>Kirim Laporan</button>
                    </form>
                    <div id="laporanGangguanAlert" style="display:none;" class="alert mt-3"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- User Device Information Card -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-laptop me-2"></i>INFORMASI PERANGKAT PENGGUNA</h5>
                    <button id="refreshDevicesBtn" class="btn btn-sm btn-refresh">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <div class="card-body">
                    <div id="connected-devices-loading" class="text-center py-3">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Memuat...</span>
                        </div>
                        <p class="mt-2">Memuat data perangkat...</p>
                    </div>
                    <div id="connected-devices-table" class="table-responsive" style="display: none;">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Nama Perangkat</th>
                                    <th>Alamat IP</th>
                                    <th>Alamat MAC</th>
                                    <th>Jenis Interface</th>
                                    <th>Status</th>
                                    <th>Terakhir Terhubung</th>
                                </tr>
                            </thead>
                            <tbody id="connected-devices-body">
                                <!-- Data akan diisi melalui JavaScript -->
                            </tbody>
                        </table>
                    </div>
                    <div id="connected-devices-empty" class="alert alert-info" style="display: none;">
                        <i class="fas fa-info-circle me-2"></i>Tidak ada perangkat pengguna yang terhubung saat ini.
                    </div>
                    <div id="connected-devices-error" class="alert alert-danger" style="display: none;">
                        <i class="fas fa-exclamation-triangle me-2"></i><span id="error-message">Gagal memuat data perangkat.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Script untuk toggle tema
        document.addEventListener('DOMContentLoaded', function() {
            const themeToggle = document.getElementById('themeToggle');
            const htmlElement = document.documentElement;
            const icon = themeToggle.querySelector('i');
            
            // Cek tema yang tersimpan
            const savedTheme = localStorage.getItem('theme');
            
            // Aplikasikan tema yang tersimpan
            if (savedTheme === 'dark') {
                htmlElement.classList.add('dark-mode');
                icon.classList.replace('fa-moon', 'fa-sun');
            }
            
            // Toggle tema saat tombol diklik
            themeToggle.addEventListener('click', function() {
                htmlElement.classList.toggle('dark-mode');
                
                // Update icon
                if (htmlElement.classList.contains('dark-mode')) {
                    icon.classList.replace('fa-moon', 'fa-sun');
                    localStorage.setItem('theme', 'dark');
                } else {
                    icon.classList.replace('fa-sun', 'fa-moon');
                    localStorage.setItem('theme', 'light');
                }
            });
            
            // Periksa status aktivasi saat halaman dimuat
            try {
                const response = fetch('/check-pro-status');
                if (response.ok) {
                    const data = response.json();
                    const { isActive } = data;
                    // Update tampilan berdasarkan status aktivasi
                    document.querySelectorAll('.pro-feature-btn').forEach(btn => {
                        btn.disabled = !isActive;
                        if (!isActive) {
                            btn.setAttribute('title', 'Fitur Pro - Silakan aktivasi terlebih dahulu');
                        }
                    });
                }
            } catch (error) {
                console.error('Error checking PRO status:', error);
            }
            
            // Muat data perangkat yang terhubung saat halaman dimuat
            console.log('DOM loaded, loading connected devices...');
            loadConnectedDevices();
        });
        
        // Toggle Password Visibility untuk 2.4G
        document.querySelector('.toggle-password-2g').addEventListener('click', function() {
            const passwordInput = this.closest('.input-group').querySelector('.wifi-password-2g');
            const eyeIcon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('fa-eye');
                eyeIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('fa-eye-slash');
                eyeIcon.classList.add('fa-eye');
            }
        });

        // Toggle Password Visibility untuk 5G
        document.querySelector('.toggle-password-5g').addEventListener('click', function() {
            const passwordInput = this.closest('.input-group').querySelector('.wifi-password-5g');
            const eyeIcon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('fa-eye');
                eyeIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('fa-eye-slash');
                eyeIcon.classList.add('fa-eye');
            }
        });

        // Handler Laporan Gangguan
        document.getElementById('formLaporanGangguan').addEventListener('submit', async function(e) {
            e.preventDefault();
            const jenis = document.getElementById('jenisGangguan').value;
            const ket = document.getElementById('keteranganGangguan').value;
            const alertBox = document.getElementById('laporanGangguanAlert');
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalBtnHtml = submitBtn.innerHTML;

            // Reset alert
            alertBox.style.display = 'none';
            alertBox.className = 'alert mt-3';
            alertBox.innerHTML = '';

            try {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Mengirim...';
                // Kirim laporan ke backend
                // Ambil data pelanggan dari EJS
                const nomorPelanggan = "<%= deviceData._tags ? (deviceData._tags.find ? deviceData._tags.find(tag => /^\d+$/.test(tag)) : '') || '' : '' %>";
                const pppoeUsername = "<%= deviceData.pppUsername || '' %>";
                const rxPower = "<%= deviceData.rxPower || '' %>";
                const userConnected2G = "<%= deviceData.userConnected2G || '' %>";
                const userConnected5G = "<%= deviceData.userConnected5G || '' %>";
                const response = await fetch('/lapor-gangguan', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        jenisGangguan: jenis,
                        keterangan: ket,
                        nomorPelanggan,
                        pppoeUsername,
                        rxPower,
                        userConnected2G,
                        userConnected5G
                    })
                });
                const data = await response.json();
                if (data.success) {
                    alertBox.classList.add('alert-success');
                    alertBox.innerHTML = '<i class="fas fa-check-circle me-2"></i>Laporan gangguan berhasil dikirim ke admin.';
                    alertBox.style.display = 'block';
                    this.reset();
                    // Otomatis hilang setelah 3 detik
                    setTimeout(() => {
                        alertBox.style.display = 'none';
                    }, 3000);
                } else {
                    throw new Error(data.message || 'Gagal mengirim laporan gangguan');
                }
            } catch (err) {
                alertBox.classList.add('alert-danger');
                alertBox.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>' + err.message;
                alertBox.style.display = 'block';
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnHtml;
            }
        });

        // Update SSID 2.4G Form Handler
        document.querySelector('.update-ssid-2g-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const deviceId = this.dataset.deviceId;
            const ssidInput = this.querySelector('input[name="ssid2G"]');
            const submitButton = this.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;
            
            try {
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                
                // Kirim request update
                const response = await fetch('/update-wifi', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceId: deviceId,
                        ssid2G: ssidInput.value
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Tampilkan toast notification
                    const toast = document.createElement('div');
                    toast.className = 'alert alert-success position-fixed top-0 end-0 m-3';
                    toast.style.zIndex = '1050';
                    toast.innerHTML = `
                        <i class="fas fa-check-circle me-2"></i>
                        SSID 2.4G berhasil diupdate
                    `;
                    document.body.appendChild(toast);
                    
                    // Hapus toast setelah 3 detik
                    setTimeout(() => {
                        toast.remove();
                    }, 3000);
                    
                    // Reload halaman
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    throw new Error(data.message || 'Gagal mengupdate SSID 2.4G');
                }
            } catch (error) {
                console.error('Update SSID 2.4G error:', error);
                alert('Terjadi kesalahan saat mengupdate SSID 2.4G: ' + error.message);
            } finally {
                // Kembalikan button ke kondisi awal
                if (submitButton) {
                    submitButton.disabled = false;
                    submitButton.innerHTML = originalButtonText;
                }
            }
        });

        // Update SSID 5G Form Handler
        document.querySelector('.update-ssid-5g-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const deviceId = this.dataset.deviceId;
            const ssidInput = this.querySelector('input[name="ssid5G"]');
            const submitButton = this.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;
            
            try {
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                
                // Kirim request update
                const response = await fetch('/update-wifi', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceId: deviceId,
                        ssid5G: ssidInput.value
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Tampilkan toast notification
                    const toast = document.createElement('div');
                    toast.className = 'alert alert-success position-fixed top-0 end-0 m-3';
                    toast.style.zIndex = '1050';
                    toast.innerHTML = `
                        <i class="fas fa-check-circle me-2"></i>
                        SSID 5G berhasil diupdate
                    `;
                    document.body.appendChild(toast);
                    
                    // Hapus toast setelah 3 detik
                    setTimeout(() => {
                        toast.remove();
                    }, 3000);
                    
                    // Reload halaman
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    throw new Error(data.message || 'Gagal mengupdate SSID 5G');
                }
            } catch (error) {
                console.error('Update SSID 5G error:', error);
                alert('Terjadi kesalahan saat mengupdate SSID 5G: ' + error.message);
            } finally {
                // Kembalikan button ke kondisi awal
                if (submitButton) {
                    submitButton.disabled = false;
                    submitButton.innerHTML = originalButtonText;
                }
            }
        });

        // Update Password 2.4G Form Handler
        document.querySelector('.update-password-2g-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const deviceId = this.dataset.deviceId;
            const passwordInput = this.querySelector('input[name="password2G"]');
            const submitButton = this.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;
            
            try {
                if (passwordInput.value.length < 8) {
                    showAlert('danger', 'Password harus minimal 8 karakter');
                    return;
                }
                
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                
                const response = await fetch('/update-wifi', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceId: deviceId,
                        password2G: passwordInput.value
                    })
                });

                const data = await response.json();
                showAlert(data.success ? 'success' : 'danger', data.message || (data.success ? 'Password 2.4G berhasil diupdate' : 'Gagal mengupdate password 2.4G'));
                
                if (data.success) {
                    passwordInput.value = '';
                    setTimeout(() => location.reload(), 2000);
                } else {
                    throw new Error(data.message || 'Gagal mengupdate password 2.4G');
                }
            } catch (error) {
                console.error('Update password 2.4G error:', error);
                showAlert('danger', 'Gagal mengupdate password 2.4G: ' + (error.message || 'Unknown error'));
            } finally {
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;
            }
        });

        // Update Password 5G Form Handler
        document.querySelector('.update-password-5g-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const deviceId = this.dataset.deviceId;
            const passwordInput = this.querySelector('input[name="password5G"]');
            const submitButton = this.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;
            
            try {
                if (passwordInput.value.length < 8) {
                    showAlert('danger', 'Password harus minimal 8 karakter');
                    return;
                }
                
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                
                const response = await fetch('/update-wifi', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceId: deviceId,
                        password5G: passwordInput.value
                    })
                });

                const data = await response.json();
                showAlert(data.success ? 'success' : 'danger', data.message || (data.success ? 'Password 5G berhasil diupdate' : 'Gagal mengupdate password 5G'));
                
                if (data.success) {
                    passwordInput.value = '';
                    setTimeout(() => location.reload(), 2000);
                } else {
                    throw new Error(data.message || 'Gagal mengupdate password 5G');
                }
            } catch (error) {
                console.error('Update password 5G error:', error);
                showAlert('danger', 'Gagal mengupdate password 5G: ' + (error.message || 'Unknown error'));
            } finally {
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;
            }
        });

        // Auto refresh setiap 5 menit
        let autoRefreshInterval = setInterval(refreshDevice, 300000);

        // Reset interval saat user manual refresh
        document.getElementById('refreshButton').addEventListener('click', () => {
            clearInterval(autoRefreshInterval);
            autoRefreshInterval = setInterval(refreshDevice, 300000);
        });

        // Cleanup interval saat user meninggalkan halaman
        window.addEventListener('beforeunload', () => {
            clearInterval(autoRefreshInterval);
        });

        async function refreshDevice() {
            const refreshButton = document.getElementById('refreshButton');
            const originalContent = refreshButton.innerHTML;
            
            try {
                // Disable button dan tampilkan loading
                refreshButton.disabled = true;
                refreshButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Refreshing...';
                
                // Kirim request refresh
                const response = await fetch('/refresh-device', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                
                if (data.success) {
                    // Tampilkan toast notification
                    const toast = document.createElement('div');
                    toast.className = 'alert alert-success position-fixed top-0 end-0 m-3';
                    toast.style.zIndex = '1050';
                    toast.innerHTML = `
                        <i class="fas fa-check-circle me-2"></i>
                        Data berhasil di-refresh
                    `;
                    document.body.appendChild(toast);
                    
                    // Hapus toast setelah 3 detik
                    setTimeout(() => {
                        toast.remove();
                    }, 3000);
                    
                    // Reload halaman
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    throw new Error(data.message || 'Gagal me-refresh data');
                }
            } catch (error) {
                console.error('Refresh error:', error);
                alert('Terjadi kesalahan saat me-refresh data: ' + error.message);
            } finally {
                // Kembalikan button ke kondisi awal
                if (refreshButton) {
                    refreshButton.disabled = false;
                    refreshButton.innerHTML = originalContent;
                }
            }
        }

        // Fungsi untuk reboot device
        async function rebootDevice() {
            const rebootButton = document.getElementById('rebootButton');
            const originalContent = rebootButton.innerHTML;
            
            try {
                // Disable button dan tampilkan loading state
                rebootButton.disabled = true;
                rebootButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Rebooting...';
                
                // Konfirmasi dari user
                if (!confirm('Apakah Anda yakin ingin melakukan reboot device?')) {
                    rebootButton.disabled = false;
                    rebootButton.innerHTML = originalContent;
                    return;
                }

                const response = await fetch('/reboot-device', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        deviceId: '<%= deviceData._id %>'
                    })
                });

                const result = await response.json();
                
                // Tampilkan toast notification
                showToast(result.success ? 'success' : 'danger', result.message);
                
                // Jika berhasil, refresh data setelah beberapa detik
                if (result.success) {
                    setTimeout(() => {
                        refreshDevice();
                    }, 30000); // Refresh after 30 seconds
                }
            } catch (error) {
                console.error('Reboot error:', error);
                showToast('danger', 'Gagal melakukan reboot device');
            } finally {
                // Kembalikan button ke kondisi awal
                rebootButton.disabled = false;
                rebootButton.innerHTML = originalContent;
            }
        }

        // Fungsi untuk update nomor pelanggan
        async function updateCustomerNumber() {
            const input = document.getElementById('customerNumber');
            const button = input.nextElementSibling;
            const originalButtonText = button.innerHTML;
            
            try {
                // Validasi input
                if (!input.value || !/^\d+$/.test(input.value)) {
                    showAlert('danger', 'Nomor pelanggan harus berupa angka');
                    return;
                }
                
                // Disable input dan button
                input.disabled = true;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Menyimpan...';
                
                // Kirim request ke server
                const response = await fetch('/update-customer-number', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceId: '<%= deviceData._id %>',
                        customerNumber: input.value
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showAlert('success', data.message || 'Nomor pelanggan berhasil diperbarui');
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    throw new Error(data.message || 'Gagal mengupdate nomor pelanggan');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('danger', error.message || 'Terjadi kesalahan saat mengupdate nomor pelanggan');
            } finally {
                // Re-enable input dan button
                input.disabled = false;
                button.disabled = false;
                button.innerHTML = originalButtonText;
            }
        }

        function showAlert(type, message) {
            const alertContainer = document.createElement('div');
            alertContainer.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            alertContainer.style.zIndex = '1050';
            alertContainer.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                ${message}
            `;
            document.body.appendChild(alertContainer);
            
            setTimeout(() => {
                alertContainer.remove();
            }, 5000);
        }

        function showToast(type, message) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                ${message}
            `;
            document.body.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
            }, 100);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    toast.remove();
                }, 500);
            }, 3000);
        }

        // Fungsi untuk mengambil data perangkat terhubung dari API
        async function loadConnectedDevices() {
            console.log('loadConnectedDevices started');
            const tableEl = document.getElementById('connected-devices-table');
            const loadingEl = document.getElementById('connected-devices-loading');
            const emptyEl = document.getElementById('connected-devices-empty');
            const errorEl = document.getElementById('connected-devices-error');
            const tableBody = document.getElementById('connected-devices-body');
            
            // Tampilkan loading
            tableEl.style.display = 'none';
            emptyEl.style.display = 'none';
            errorEl.style.display = 'none';
            loadingEl.style.display = 'block';
            
            try {
                console.log('Fetching data from API...');
                const deviceId = '<%= deviceData._id %>';
                const response = await fetch(`/api/connected-devices?deviceId=${deviceId}`);
                
                // Jika respons bukan OK, tetap coba parse JSON (mungkin berisi data fallback)
                const data = await response.json();
                console.log('Data perangkat terhubung:', data);
                
                if (data.success && data.connectedUsers && data.connectedUsers.length > 0) {
                    // Render tabel
                    tableBody.innerHTML = '';
                    
                    data.connectedUsers.forEach(device => {
                        const row = document.createElement('tr');
                        
                        const statusBadge = device.activeStatus === 'Aktif' 
                            ? '<span class="badge bg-success">Aktif</span>'
                            : '<span class="badge bg-secondary">Tidak Aktif</span>';
                        
                        row.innerHTML = `
                            <td>${device.hostName || '-'}</td>
                            <td>${device.ipAddress || '-'}</td>
                            <td>${device.macAddress || '-'}</td>
                            <td>${device.interfaceType || '-'}</td>
                            <td>${statusBadge}</td>
                            <td>${device.lastConnect || '-'}</td>
                        `;
                        
                        tableBody.appendChild(row);
                    });
                    
                    // Tampilkan tabel
                    tableEl.style.display = 'block';
                    loadingEl.style.display = 'none';
                    console.log('Table displayed');
                } else {
                    // Tampilkan pesan kosong
                    emptyEl.innerHTML = `
                        <div class="alert alert-info text-center">
                            <i class="fas fa-info-circle me-2"></i>
                            Tidak ada perangkat pengguna yang terhubung saat ini.
                            <button class="btn btn-sm btn-primary ms-3" onclick="refreshDevice()">
                                <i class="fas fa-sync-alt me-1"></i> Refresh
                            </button>
                        </div>
                    `;
                    emptyEl.style.display = 'block';
                    loadingEl.style.display = 'none';
                    console.log('No devices found');
                }
            } catch (error) {
                console.error('Error loading connected devices:', error);
                
                // Tampilkan pesan error sederhana
                errorEl.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Data perangkat tidak dapat dimuat.
                        <button class="btn btn-sm btn-primary ms-3" onclick="refreshDevice()">
                            <i class="fas fa-sync-alt me-1"></i> Coba Lagi
                        </button>
                    </div>
                `;
                errorEl.style.display = 'block';
                loadingEl.style.display = 'none';
            }
        }
        
        // Tambahkan event listener untuk tombol refresh
        document.getElementById('refreshDevicesBtn').addEventListener('click', function() {
            this.disabled = true;
            this.innerHTML = '<i class="fas fa-sync-alt fa-spin"></i>';
            
            // Hubungkan dengan fungsi refreshDevice untuk memastikan pembaruan data server
            refreshDevice().then(() => {
                setTimeout(() => {
                    loadConnectedDevices().finally(() => {
                        this.disabled = false;
                        this.innerHTML = '<i class="fas fa-sync-alt"></i>';
                    });
                }, 5000); // Tunggu 5 detik setelah refresh device
            }).catch(() => {
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-sync-alt"></i>';
                loadConnectedDevices();
            });
        });
    </script>
</body>
</html>